pipeline {
    agent any
    environment {
        ENV_VARS = credentials('env-file-secret')
    }

    stages {
        stage('Checkout App') {
            steps {
                git branch: 'main',
                    credentialsId: 'github-token',
                    url: 'https://github.com/Rayyan-Imtiaz/colorpalette/'
            }
        }

        stage('Write .env File') {
            steps {
                script {
                    writeFile file: '.env', text: ENV_VARS
                }
            }
        }

        stage('Clean Up Existing Containers') {
            steps {
                sh 'docker rm -f color-palette-web-ci || true'
            }
        }

        stage('Build and Deploy App') {
            steps {
                sh 'docker-compose -p colorpalette-ci -f docker-compose.yml up -d --build'
            }
        }

        stage('Clone and Run Selenium Tests') {
            steps {
                sh '''
                rm -rf selenium-tests
                git clone https://github.com/Rayyan-Imtiaz/colorpalette-tests selenium-tests
                cd selenium-tests
                docker run --rm -v $(pwd):/tests -w /tests markhobson/maven-chrome mvn clean test
                '''
            }
        }
    }

    post {
        success {
            mail to: 'rayyanq1172@gmail.com',
                 subject: "✅ Jenkins Pipeline Success",
                 body: "Your ColorPalette application was deployed and Selenium tests passed successfully."
        }

        failure {
            mail to: 'rayyanq1172@gmail.com',
                 subject: "❌ Jenkins Pipeline Failed",
                 body: "Your pipeline failed. Please check the Jenkins logs for details."
        }
    }
}
